vm框架中的数据绑定

一：数据绑定概述：视图（view）和数据（model）之间的绑定

二：数据绑定目的：不用手动调用方法渲染视图，提高开发效率；统一处理数据，便于维护

三：数据绑定中的元素：
	3.1 视图（view）：说白了就是html中dom元素的展示
	3.2 数据（model）：浏览器中的数据，localStorage , sessionStorage , js中的object等

四：数据绑定分类：
	4.1 view > model的数据绑定：view改变，导致model改变
	4.2 model > view的数据绑定：model改变，导致view改变

五：数据绑定实现方法：
	5.1 view > model的数据绑定实现方法：
			修改dom元素（input,textarea,select）的数据，导致model产生变化，
			只要给dom元素绑定change事件，触发事件的时候修改model即可，不细讲

	5.2 model > view的数据绑定实现方法：
			1.发布订阅模式（backbone.js用到）；
			2.数据劫持(vue.js用到)；
			3.脏值检查(angular.js用到)；


六：model > view数据绑定demo讲解

	6.1 demo简易思路（基于发布订阅模式和数据劫持）：
			1.通过defineProperty来监控model中的所有属性（对每一个属性都监控）
			2.编译template生成DOM树，同时绑定dom节点和model（例如<div id="{{model.name}}"></div>）,
			  defineProperty中已经给“model.name”绑定了对应的function，
			  一旦model.name改变，该funciton就操作上面这个dom节点，改变view
	
	6.2 demo如下：

		<!DOCTYPE html>
		<html lang="en">
			<head>
				<meta charset="UTF-8">
				<title>Document</title>
				<link rel="stylesheet" type="text/css" href="demo.css">
				<script type="text/javascript" src="./observe.js"></script>
			</head>
			<body>
				<template id="inner" type="text/template">
					<!-- 只支持单个属性，不支持函数计算-->
					<div title="{{des}}">
						<div>
							<ul id="list">
								<li >
									<span >age:</span>
									<input  type="text" name="" value="{{age}}" >
									<span id="age" style="float: left;">+</span>
								</li>
								<li>
									<span>name:</span>
									<input type="text" name="" value="{{name}}">
								</li>
							</ul>
						</div>
						
					</div>
				</template>

				<script type="text/javascript">
					(function(){
						window.data={name:"jeffrey",age:28,des:"测试"};
						var vm=new VM({
							data:data,
							template:document.getElementById("inner").innerHTML
							// wrapper:document.body//可以指定对应容器，也可以不指定容器，直接获取元素，再手动插入对应dom元素
						});
						document.body.appendChild(vm.get());

						document.getElementById("age").addEventListener("click",function(){
							data.age++;
						});
					})();
				</script>
			</body>
		</html>

		其实调用很简单，就是直接 new VM({data:数据,template:模板});


	6.3 详细代码说明：

		实现一个model到view的数据绑定，需要三个模块
		1.Observer： 用到了发布订阅模式和数据监控，defineProperty用于“监控model", dom元素执行"订阅"操作，给model中的属性绑定function；model中属性变化的时候，
					 执行"发布"这个操作，执行之前绑定的那个function
		2.Compile 模板编译器
		3.VM：ViewModel,作为数据单向绑定的入口类，它把Observer和Compile结合在一起，完成model ---> view绑定，最终生成dom树并渲染
